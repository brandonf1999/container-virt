"""storage network schema

Revision ID: 5a8435d5e293
Revises: 59d0a9b8ae86
Create Date: 2025-10-18 14:02:14.308382

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5a8435d5e293'
down_revision: Union[str, Sequence[str], None] = '59d0a9b8ae86'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('networks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('forward_mode', sa.String(length=64), nullable=True),
    sa.Column('bridge_name', sa.String(length=255), nullable=True),
    sa.Column('vlan_id', sa.Integer(), nullable=True),
    sa.Column('is_shared', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('options', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_networks'))
    )
    op.create_index('uq_networks_shared', 'networks', ['name'], unique=True, postgresql_where=sa.text('is_shared IS true'))
    op.create_table('storage_domains',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('DIR', 'FS', 'NETFS', 'LOGICAL', 'ISCSI', 'GLUSTER', 'RBD', 'SHEEPDOG', 'ZFS', 'UNKNOWN', name='storage_domain_type'), nullable=False),
    sa.Column('is_shared', sa.Boolean(), nullable=False),
    sa.Column('source_host', sa.String(length=255), nullable=True),
    sa.Column('source_path', sa.String(length=1024), nullable=True),
    sa.Column('source_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('options', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storage_domains'))
    )
    op.create_index('uq_storage_domains_shared', 'storage_domains', ['name', 'type'], unique=True, postgresql_where=sa.text('is_shared IS true'))
    op.create_table('host_network_status',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('host_id', sa.UUID(), nullable=False),
    sa.Column('network_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'MISSING', name='host_network_status_state'), nullable=False),
    sa.Column('bridge_active', sa.Boolean(), nullable=True),
    sa.Column('last_checked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('mac_prefix', sa.String(length=32), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['hosts.id'], name=op.f('fk_host_network_status_host_id_hosts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['network_id'], ['networks.id'], name=op.f('fk_host_network_status_network_id_networks'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_host_network_status')),
    sa.UniqueConstraint('host_id', 'network_id', name='uq_host_network')
    )
    op.create_table('host_storage_status',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('host_id', sa.UUID(), nullable=False),
    sa.Column('storage_domain_id', sa.UUID(), nullable=False),
    sa.Column('scope', sa.Enum('LOCAL', 'SHARED', name='host_storage_scope'), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'DEGRADED', 'MISSING', name='host_storage_status_state'), nullable=False),
    sa.Column('capacity_bytes', sa.BigInteger(), nullable=True),
    sa.Column('allocation_bytes', sa.BigInteger(), nullable=True),
    sa.Column('available_bytes', sa.BigInteger(), nullable=True),
    sa.Column('last_checked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['hosts.id'], name=op.f('fk_host_storage_status_host_id_hosts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['storage_domain_id'], ['storage_domains.id'], name=op.f('fk_host_storage_status_storage_domain_id_storage_domains'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_host_storage_status')),
    sa.UniqueConstraint('host_id', 'storage_domain_id', name='uq_host_storage')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('host_storage_status')
    op.drop_table('host_network_status')
    op.drop_index('uq_storage_domains_shared', table_name='storage_domains', postgresql_where=sa.text('is_shared IS true'))
    op.drop_table('storage_domains')
    op.drop_index('uq_networks_shared', table_name='networks', postgresql_where=sa.text('is_shared IS true'))
    op.drop_table('networks')
    # ### end Alembic commands ###

